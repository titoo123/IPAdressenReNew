#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IPAdressenReNew
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IP-AdressenDB")]
	public partial class DDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertBereiche(Bereiche instance);
    partial void UpdateBereiche(Bereiche instance);
    partial void DeleteBereiche(Bereiche instance);
    partial void InsertGeräte(Geräte instance);
    partial void UpdateGeräte(Geräte instance);
    partial void DeleteGeräte(Geräte instance);
    partial void InsertAdressen(Adressen instance);
    partial void UpdateAdressen(Adressen instance);
    partial void DeleteAdressen(Adressen instance);
    #endregion
		
		public DDataContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["IP_AdressenDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Bereiche> Bereiche
		{
			get
			{
				return this.GetTable<Bereiche>();
			}
		}
		
		public System.Data.Linq.Table<Geräte> Geräte
		{
			get
			{
				return this.GetTable<Geräte>();
			}
		}
		
		public System.Data.Linq.Table<Adressen> Adressen
		{
			get
			{
				return this.GetTable<Adressen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Rechte;
		
		private System.Nullable<int> _Distrikt;
		
		private EntityRef<Bereiche> _Bereiche;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRechteChanging(string value);
    partial void OnRechteChanged();
    partial void OnDistriktChanging(System.Nullable<int> value);
    partial void OnDistriktChanged();
    #endregion
		
		public User()
		{
			this._Bereiche = default(EntityRef<Bereiche>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rechte", DbType="VarChar(50)")]
		public string Rechte
		{
			get
			{
				return this._Rechte;
			}
			set
			{
				if ((this._Rechte != value))
				{
					this.OnRechteChanging(value);
					this.SendPropertyChanging();
					this._Rechte = value;
					this.SendPropertyChanged("Rechte");
					this.OnRechteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distrikt", DbType="Int")]
		public System.Nullable<int> Distrikt
		{
			get
			{
				return this._Distrikt;
			}
			set
			{
				if ((this._Distrikt != value))
				{
					if (this._Bereiche.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistriktChanging(value);
					this.SendPropertyChanging();
					this._Distrikt = value;
					this.SendPropertyChanged("Distrikt");
					this.OnDistriktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bereiche_User", Storage="_Bereiche", ThisKey="Distrikt", OtherKey="Id", IsForeignKey=true)]
		public Bereiche Bereiche
		{
			get
			{
				return this._Bereiche.Entity;
			}
			set
			{
				Bereiche previousValue = this._Bereiche.Entity;
				if (((previousValue != value) 
							|| (this._Bereiche.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bereiche.Entity = null;
						previousValue.User.Remove(this);
					}
					this._Bereiche.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._Distrikt = value.Id;
					}
					else
					{
						this._Distrikt = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bereiche");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bereiche")]
	public partial class Bereiche : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<byte> _IP_Bereich3;
		
		private System.Nullable<byte> _IP_Bereich2;
		
		private System.Nullable<byte> _IP_Bereich1;
		
		private System.Nullable<bool> _DHCP;
		
		private System.Nullable<byte> _Netzmaske;
		
		private EntitySet<User> _User;
		
		private EntitySet<Geräte> _Geräte;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIP_Bereich3Changing(System.Nullable<byte> value);
    partial void OnIP_Bereich3Changed();
    partial void OnIP_Bereich2Changing(System.Nullable<byte> value);
    partial void OnIP_Bereich2Changed();
    partial void OnIP_Bereich1Changing(System.Nullable<byte> value);
    partial void OnIP_Bereich1Changed();
    partial void OnDHCPChanging(System.Nullable<bool> value);
    partial void OnDHCPChanged();
    partial void OnNetzmaskeChanging(System.Nullable<byte> value);
    partial void OnNetzmaskeChanged();
    #endregion
		
		public Bereiche()
		{
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			this._Geräte = new EntitySet<Geräte>(new Action<Geräte>(this.attach_Geräte), new Action<Geräte>(this.detach_Geräte));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_Bereich3", DbType="TinyInt")]
		public System.Nullable<byte> IP_Bereich3
		{
			get
			{
				return this._IP_Bereich3;
			}
			set
			{
				if ((this._IP_Bereich3 != value))
				{
					this.OnIP_Bereich3Changing(value);
					this.SendPropertyChanging();
					this._IP_Bereich3 = value;
					this.SendPropertyChanged("IP_Bereich3");
					this.OnIP_Bereich3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_Bereich2", DbType="TinyInt")]
		public System.Nullable<byte> IP_Bereich2
		{
			get
			{
				return this._IP_Bereich2;
			}
			set
			{
				if ((this._IP_Bereich2 != value))
				{
					this.OnIP_Bereich2Changing(value);
					this.SendPropertyChanging();
					this._IP_Bereich2 = value;
					this.SendPropertyChanged("IP_Bereich2");
					this.OnIP_Bereich2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_Bereich1", DbType="TinyInt")]
		public System.Nullable<byte> IP_Bereich1
		{
			get
			{
				return this._IP_Bereich1;
			}
			set
			{
				if ((this._IP_Bereich1 != value))
				{
					this.OnIP_Bereich1Changing(value);
					this.SendPropertyChanging();
					this._IP_Bereich1 = value;
					this.SendPropertyChanged("IP_Bereich1");
					this.OnIP_Bereich1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DHCP", DbType="Bit")]
		public System.Nullable<bool> DHCP
		{
			get
			{
				return this._DHCP;
			}
			set
			{
				if ((this._DHCP != value))
				{
					this.OnDHCPChanging(value);
					this.SendPropertyChanging();
					this._DHCP = value;
					this.SendPropertyChanged("DHCP");
					this.OnDHCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Netzmaske", DbType="TinyInt")]
		public System.Nullable<byte> Netzmaske
		{
			get
			{
				return this._Netzmaske;
			}
			set
			{
				if ((this._Netzmaske != value))
				{
					this.OnNetzmaskeChanging(value);
					this.SendPropertyChanging();
					this._Netzmaske = value;
					this.SendPropertyChanged("Netzmaske");
					this.OnNetzmaskeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bereiche_User", Storage="_User", ThisKey="Id", OtherKey="Distrikt")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bereiche_Geräte", Storage="_Geräte", ThisKey="Id", OtherKey="Id_Bereich")]
		public EntitySet<Geräte> Geräte
		{
			get
			{
				return this._Geräte;
			}
			set
			{
				this._Geräte.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Bereiche = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Bereiche = null;
		}
		
		private void attach_Geräte(Geräte entity)
		{
			this.SendPropertyChanging();
			entity.Bereiche = this;
		}
		
		private void detach_Geräte(Geräte entity)
		{
			this.SendPropertyChanging();
			entity.Bereiche = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Geräte")]
	public partial class Geräte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Art;
		
		private string _Typ;
		
		private string _Standort;
		
		private string _AlteIP;
		
		private string _VNC_Port;
		
		private string _VNC_Passwort;
		
		private string _Kommentar;
		
		private System.Nullable<int> _Id_Bereich;
		
		private System.Nullable<int> _Port;
		
		private EntitySet<Adressen> _Adressen;
		
		private EntityRef<Bereiche> _Bereiche;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnArtChanging(string value);
    partial void OnArtChanged();
    partial void OnTypChanging(string value);
    partial void OnTypChanged();
    partial void OnStandortChanging(string value);
    partial void OnStandortChanged();
    partial void OnAlteIPChanging(string value);
    partial void OnAlteIPChanged();
    partial void OnVNC_PortChanging(string value);
    partial void OnVNC_PortChanged();
    partial void OnVNC_PasswortChanging(string value);
    partial void OnVNC_PasswortChanged();
    partial void OnKommentarChanging(string value);
    partial void OnKommentarChanged();
    partial void OnId_BereichChanging(System.Nullable<int> value);
    partial void OnId_BereichChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    #endregion
		
		public Geräte()
		{
			this._Adressen = new EntitySet<Adressen>(new Action<Adressen>(this.attach_Adressen), new Action<Adressen>(this.detach_Adressen));
			this._Bereiche = default(EntityRef<Bereiche>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art", DbType="VarChar(50)")]
		public string Art
		{
			get
			{
				return this._Art;
			}
			set
			{
				if ((this._Art != value))
				{
					this.OnArtChanging(value);
					this.SendPropertyChanging();
					this._Art = value;
					this.SendPropertyChanged("Art");
					this.OnArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typ", DbType="VarChar(50)")]
		public string Typ
		{
			get
			{
				return this._Typ;
			}
			set
			{
				if ((this._Typ != value))
				{
					this.OnTypChanging(value);
					this.SendPropertyChanging();
					this._Typ = value;
					this.SendPropertyChanged("Typ");
					this.OnTypChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standort", DbType="VarChar(50)")]
		public string Standort
		{
			get
			{
				return this._Standort;
			}
			set
			{
				if ((this._Standort != value))
				{
					this.OnStandortChanging(value);
					this.SendPropertyChanging();
					this._Standort = value;
					this.SendPropertyChanged("Standort");
					this.OnStandortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlteIP", DbType="VarChar(50)")]
		public string AlteIP
		{
			get
			{
				return this._AlteIP;
			}
			set
			{
				if ((this._AlteIP != value))
				{
					this.OnAlteIPChanging(value);
					this.SendPropertyChanging();
					this._AlteIP = value;
					this.SendPropertyChanged("AlteIP");
					this.OnAlteIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VNC_Port", DbType="VarChar(50)")]
		public string VNC_Port
		{
			get
			{
				return this._VNC_Port;
			}
			set
			{
				if ((this._VNC_Port != value))
				{
					this.OnVNC_PortChanging(value);
					this.SendPropertyChanging();
					this._VNC_Port = value;
					this.SendPropertyChanged("VNC_Port");
					this.OnVNC_PortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VNC_Passwort", DbType="VarChar(50)")]
		public string VNC_Passwort
		{
			get
			{
				return this._VNC_Passwort;
			}
			set
			{
				if ((this._VNC_Passwort != value))
				{
					this.OnVNC_PasswortChanging(value);
					this.SendPropertyChanging();
					this._VNC_Passwort = value;
					this.SendPropertyChanged("VNC_Passwort");
					this.OnVNC_PasswortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kommentar", DbType="VarChar(MAX)")]
		public string Kommentar
		{
			get
			{
				return this._Kommentar;
			}
			set
			{
				if ((this._Kommentar != value))
				{
					this.OnKommentarChanging(value);
					this.SendPropertyChanging();
					this._Kommentar = value;
					this.SendPropertyChanged("Kommentar");
					this.OnKommentarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Bereich", DbType="Int")]
		public System.Nullable<int> Id_Bereich
		{
			get
			{
				return this._Id_Bereich;
			}
			set
			{
				if ((this._Id_Bereich != value))
				{
					if (this._Bereiche.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_BereichChanging(value);
					this.SendPropertyChanging();
					this._Id_Bereich = value;
					this.SendPropertyChanged("Id_Bereich");
					this.OnId_BereichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Geräte_Adressen", Storage="_Adressen", ThisKey="Id", OtherKey="Id_Geräte")]
		public EntitySet<Adressen> Adressen
		{
			get
			{
				return this._Adressen;
			}
			set
			{
				this._Adressen.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bereiche_Geräte", Storage="_Bereiche", ThisKey="Id_Bereich", OtherKey="Id", IsForeignKey=true)]
		public Bereiche Bereiche
		{
			get
			{
				return this._Bereiche.Entity;
			}
			set
			{
				Bereiche previousValue = this._Bereiche.Entity;
				if (((previousValue != value) 
							|| (this._Bereiche.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bereiche.Entity = null;
						previousValue.Geräte.Remove(this);
					}
					this._Bereiche.Entity = value;
					if ((value != null))
					{
						value.Geräte.Add(this);
						this._Id_Bereich = value.Id;
					}
					else
					{
						this._Id_Bereich = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bereiche");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adressen(Adressen entity)
		{
			this.SendPropertyChanging();
			entity.Geräte = this;
		}
		
		private void detach_Adressen(Adressen entity)
		{
			this.SendPropertyChanging();
			entity.Geräte = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adressen")]
	public partial class Adressen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MAC;
		
		private System.Nullable<int> _Id_Geräte;
		
		private System.Nullable<byte> _Adb1;
		
		private System.Nullable<byte> _Adb2;
		
		private System.Nullable<byte> _Adb3;
		
		private System.Nullable<byte> _Adb4;
		
		private System.Nullable<byte> _Adb5;
		
		private EntityRef<Geräte> _Geräte;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMACChanging(string value);
    partial void OnMACChanged();
    partial void OnId_GeräteChanging(System.Nullable<int> value);
    partial void OnId_GeräteChanged();
    partial void OnAdb1Changing(System.Nullable<byte> value);
    partial void OnAdb1Changed();
    partial void OnAdb2Changing(System.Nullable<byte> value);
    partial void OnAdb2Changed();
    partial void OnAdb3Changing(System.Nullable<byte> value);
    partial void OnAdb3Changed();
    partial void OnAdb4Changing(System.Nullable<byte> value);
    partial void OnAdb4Changed();
    partial void OnAdb5Changing(System.Nullable<byte> value);
    partial void OnAdb5Changed();
    #endregion
		
		public Adressen()
		{
			this._Geräte = default(EntityRef<Geräte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAC", DbType="VarChar(MAX)")]
		public string MAC
		{
			get
			{
				return this._MAC;
			}
			set
			{
				if ((this._MAC != value))
				{
					this.OnMACChanging(value);
					this.SendPropertyChanging();
					this._MAC = value;
					this.SendPropertyChanged("MAC");
					this.OnMACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Geräte", DbType="Int")]
		public System.Nullable<int> Id_Geräte
		{
			get
			{
				return this._Id_Geräte;
			}
			set
			{
				if ((this._Id_Geräte != value))
				{
					if (this._Geräte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_GeräteChanging(value);
					this.SendPropertyChanging();
					this._Id_Geräte = value;
					this.SendPropertyChanged("Id_Geräte");
					this.OnId_GeräteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adb1", DbType="TinyInt")]
		public System.Nullable<byte> Adb1
		{
			get
			{
				return this._Adb1;
			}
			set
			{
				if ((this._Adb1 != value))
				{
					this.OnAdb1Changing(value);
					this.SendPropertyChanging();
					this._Adb1 = value;
					this.SendPropertyChanged("Adb1");
					this.OnAdb1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adb2", DbType="TinyInt")]
		public System.Nullable<byte> Adb2
		{
			get
			{
				return this._Adb2;
			}
			set
			{
				if ((this._Adb2 != value))
				{
					this.OnAdb2Changing(value);
					this.SendPropertyChanging();
					this._Adb2 = value;
					this.SendPropertyChanged("Adb2");
					this.OnAdb2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adb3", DbType="TinyInt")]
		public System.Nullable<byte> Adb3
		{
			get
			{
				return this._Adb3;
			}
			set
			{
				if ((this._Adb3 != value))
				{
					this.OnAdb3Changing(value);
					this.SendPropertyChanging();
					this._Adb3 = value;
					this.SendPropertyChanged("Adb3");
					this.OnAdb3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adb4", DbType="TinyInt")]
		public System.Nullable<byte> Adb4
		{
			get
			{
				return this._Adb4;
			}
			set
			{
				if ((this._Adb4 != value))
				{
					this.OnAdb4Changing(value);
					this.SendPropertyChanging();
					this._Adb4 = value;
					this.SendPropertyChanged("Adb4");
					this.OnAdb4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adb5", DbType="TinyInt")]
		public System.Nullable<byte> Adb5
		{
			get
			{
				return this._Adb5;
			}
			set
			{
				if ((this._Adb5 != value))
				{
					this.OnAdb5Changing(value);
					this.SendPropertyChanging();
					this._Adb5 = value;
					this.SendPropertyChanged("Adb5");
					this.OnAdb5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Geräte_Adressen", Storage="_Geräte", ThisKey="Id_Geräte", OtherKey="Id", IsForeignKey=true)]
		public Geräte Geräte
		{
			get
			{
				return this._Geräte.Entity;
			}
			set
			{
				Geräte previousValue = this._Geräte.Entity;
				if (((previousValue != value) 
							|| (this._Geräte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Geräte.Entity = null;
						previousValue.Adressen.Remove(this);
					}
					this._Geräte.Entity = value;
					if ((value != null))
					{
						value.Adressen.Add(this);
						this._Id_Geräte = value.Id;
					}
					else
					{
						this._Id_Geräte = default(Nullable<int>);
					}
					this.SendPropertyChanged("Geräte");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
